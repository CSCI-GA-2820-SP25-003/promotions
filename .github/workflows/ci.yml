name: CI

on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["master"]

jobs:
  test:
    runs-on: ubuntu-latest

    # Spin up Postgres as a service on the host runner
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_PASSWORD: pgs3cr3t
        ports:
          - 5432:5432  # Expose Postgres on localhost:5432 in the runner

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      # Wait for Postgres to accept connections on localhost:5432
      - name: Wait for Postgres
        run: |
          echo "Waiting for Postgres to be ready..."
          for i in {1..10}; do
            if nc -z localhost 5432; then
              echo "Postgres is ready"
              exit 0
            fi
            sleep 5
          done
          echo "Postgres not ready in time!"
          exit 1

      # Build your devcontainer image from .devcontainer/Dockerfile
      - name: Build devcontainer
        run: docker build -t my-devcontainer -f .github/CI/Dockerfile .

      # Run tests inside the container, connecting to Postgres on localhost:5432
      # NOTE: Some GitHub-hosted runners do allow `--network host`, but not all.
      - name: Run tests (network=host)
        run: |
          docker run --rm \
            --network host \
            -e DATABASE_URI="postgresql+psycopg://postgres:pgs3cr3t@127.0.0.1:5432/postgres" \
            my-devcontainer python -m pytest tests

      - name: Run flake8 linting
        run: docker run --rm my-devcontainer flake8 . --config=setup.cfg

      - name: Run pylint linting
        run: docker run --rm my-devcontainer pylint service wsgi.py
      
      - name: Run tests and generate coverage report
        run: |
          docker run --rm \
            --network host \
            -e DATABASE_URI="postgresql+psycopg://postgres:pgs3cr3t@127.0.0.1:5432/postgres" \
            -v ${{ github.workspace }}:/workspace \
            -w /workspace \
            my-devcontainer pytest --cov=service --cov-report=xml:coverage.xml     
      
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: CSCI-GA-2820-SP25-003/promotions
          files: coverage.xml
      
      - name: Run Flask service in background
        run: |
          docker run -d \
            --network host \
            -e DATABASE_URI="postgresql+psycopg://postgres:pgs3cr3t@127.0.0.1:5432/postgres" \
            -p 8080:8080 \
            --name flask-service \
            my-devcontainer honcho start
          sleep 10
  
      - name: Run BDD Tests with Behave
        run: docker exec flask-service behave
        env:
          BASE_URL: http://nyu-project:8080
      
      - name: Stop Flask container
        run: docker stop flask-service